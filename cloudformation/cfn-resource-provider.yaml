AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Global Accelerator Provider
Parameters:
  LambdaS3Bucket:
    Type: String
    Default: ''
  CFNCustomProviderZipFileName:
    Type: String
    Default: 'lambdas/cfn-global-accelerator-provider-latest.zip'
    
Conditions:
  UsePublicBucket: !Equals
    - !Ref 'LambdaS3Bucket'
    - ''
Resources:
  CFNGlobalAcceleratorProvider:
    Type: AWS::Lambda::Function
    DependsOn:
      - LambdaRole
    Properties:
      Description: CloudFormation Global Accelerator Provider
      Code:
        S3Bucket: !If
          - UsePublicBucket
          - !Sub 'binxio-public-${AWS::Region}'
          - !Ref 'LambdaS3Bucket'
        S3Key: !Ref CFNCustomProviderZipFileName
      FunctionName: cfn-global-accelerator-provider
      Handler: provider.handler
      Timeout: 900
      MemorySize: 256
      Role: !GetAtt 'LambdaRole.Arn'
      Runtime: python3.7

  LambdaPolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - LambdaRole
    Properties:
      PolicyName: CFNCustomGlobalAcceleratorProviderPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:DeleteNetworkInterface
            Resource: '*'

          - Effect: Allow
            Action: ec2:DeleteSecurityGroup
            Resource: '*'
            Condition:
              StringEquals:
                ec2:ResourceTag/AWSServiceName: GlobalAccelerator

          - Effect: Allow
            Action:
              - ec2:CreateSecurityGroup
              - ec2:DescribeSecurityGroups
            Resource: '*'

          - Effect: Allow
            Action: elasticloadbalancing:DescribeLoadBalancers
            Resource: '*'

          - Effect: Allow
            Action: ec2:CreateTags
            Resource:
              - arn:aws:ec2:*:*:security-group/*
              - arn:aws:ec2:*:*:network-interface/*

          - Effect: Allow
            Action: globalaccelerator:*
            Resource: '*'
      Roles:
        - !Ref 'LambdaRole'

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

